install.packages("png")
library(png)
trimestres <- c("Q1", "Q2", "Q3", "Q4")
ventas <- c(120, 150, 100, 130)
plot(trimestres, ventas, main = "Ventas por Trimestre",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
text(trimestres, ventas, labels = ventas, pos = 3, col = "red")
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Ventas por Trimestre",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
text(trimestres, ventas, labels = ventas, pos = 3, col = "red")
dev.off()
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
install.packages("forecast")
library(forecast)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
modelo <- auto.arima(serie_temporal)
summary(modelo)
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
install.packages("forecast")
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260
)
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
install.packages("forecast")
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
install.packages("forecast")
library(forecast)
install.packages("forecast")
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
modelo <- auto.arima(serie_temporal)
summary(modelo)
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
tabla_ventas <- data.frame(Trimestre = trimestres, Ventas = ventas)
tabla_ventas <- rbind(c("Trimestre", "Ventas"), tabla_ventas)
write.csv(tabla_ventas, "tabla_ventas_trimestrales.csv", row.names = FALSE)
jpeg("grafico_dispersión_ventas_trimestrales.jpeg", width = 800, height = 600, quality = 100)
plot(tabla_ventas$Trimestre, tabla_ventas$Ventas,
main = "Ventas Trimestrales",
xlab = "Trimestre", ylab = "Ventas",
pch = 16, col = "blue", cex = 1.5)
text(tabla_ventas$Trimestre, tabla_ventas$Ventas,
labels = tabla_ventas$Ventas, pos = 3, col = "green")
legend("topright", legend = "Ventas", col = "blue", pch = 16)
dev.off()
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
###############################################
# Crear una tabla
tabla_ventas <- data.frame(Trimestre = trimestres, Ventas = ventas)
# Agregar rótulos a la primera fila
tabla_ventas <- rbind(c("Trimestre", "Ventas"), tabla_ventas)
# Guardar la tabla como archivo CSV (puedes ajustar el nombre según tu necesidad)
write.csv(tabla_ventas, "tabla_ventas_trimestrales.csv", row.names = FALSE)
# Gráfico de dispersión
jpeg("grafico_dispersión_ventas_trimestrales.jpeg", width = 800, height = 600, quality = 100)
# Crear el gráfico de dispersión
plot(tabla_ventas$Trimestre, tabla_ventas$Ventas,
main = "Ventas Trimestrales",
xlab = "Trimestre", ylab = "Ventas",
pch = 16, col = "blue", cex = 1.5)
# Añadir etiquetas a los puntos
text(tabla_ventas$Trimestre, tabla_ventas$Ventas,
labels = tabla_ventas$Ventas, pos = 3, col = "green")
# Añadir leyenda
legend("topright", legend = "Ventas", col = "blue", pch = 16)
dev.off()
install.packages("forecast")
trimestres <- c(1, 2, 3, 4)
ventas <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280,
1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
)
# Gráfico de dispersión
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_dispersión_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(trimestres, ventas, main = "Gráfico de Dispersión de Ventas",
xlab = "Trimestre", ylab = "Ventas (en miles)",
pch = 16, col = "blue", cex = 1.5)
dev.off()
# Gráfico de secuencia
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
# Guardar el gráfico como imagen JPEG
jpeg("grafico_secuencia_ventas.jpeg", width = 800, height = 600, quality = 100)
plot(ventas, type = "o", main = "Gráfico de Secuencia de Ventas",
xlab = "Secuencia", ylab = "Ventas (en miles)",
col = "red", pch = 16, cex = 1.5)
dev.off()
# Instalar y cargar el paquete forecast
install.packages("forecast")
library(forecast)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas <- c(120, 150, 100, 130)
# Crear una serie temporal
serie_temporal <- ts(ventas, start = c(2021, 1), frequency = 4)
# Ajustar un modelo de series temporales (ejemplo con un modelo ARIMA)
modelo <- auto.arima(serie_temporal)
# Obtener un resumen del modelo
summary(modelo)
# Graficar los componentes del modelo
plot(forecast(modelo), main = "Componentes de la Serie Temporal")
###############################################
# Crear una tabla
tabla_ventas <- data.frame(Trimestre = trimestres, Ventas = ventas)
# Agregar rótulos a la primera fila
tabla_ventas <- rbind(c("Trimestre", "Ventas"), tabla_ventas)
# Guardar la tabla como archivo CSV (puedes ajustar el nombre según tu necesidad)
write.csv(tabla_ventas, "tabla_ventas_trimestrales.csv", row.names = FALSE)
# Gráfico de dispersión
jpeg("grafico_dispersión_ventas_trimestrales.jpeg", width = 800, height = 600, quality = 100)
# Crear el gráfico de dispersión
plot(tabla_ventas$Trimestre, tabla_ventas$Ventas,
main = "Ventas Trimestrales",
xlab = "Trimestre", ylab = "Ventas",
pch = 16, col = "blue", cex = 1.5)
# Añadir etiquetas a los puntos
text(tabla_ventas$Trimestre, tabla_ventas$Ventas,
labels = tabla_ventas$Ventas, pos = 3, col = "green")
# Añadir leyenda
legend("topright", legend = "Ventas", col = "blue", pch = 16)
dev.off()
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = TRUE)
print(t_test_result)
# Datos de ejemplo (reemplaza con tus datos reales)
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
# Realizar la prueba t de Student para comparación de medias
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = TRUE)
# Mostrar resultados
print(t_test_result)
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250 , 1250 , 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280 ,1280, 1280, 1280, 1280, 1280, 1280, 1280 ,1280 ,1280 ,1280 ,1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270 ,1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = TRUE)
length(ventas_producto_A)
length(ventas_producto_B)
ventas_producto_A <- head(ventas_producto_A, length(ventas_producto_B))
print(t_test_result)
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270, 1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
ventas_producto_A <- head(ventas_producto_A, length(ventas_producto_B))
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = TRUE)
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = FALSE)
print(t_test_result)
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270, 1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270, 1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
ventas_producto_A <- head(ventas_producto_A, length(ventas_producto_B))
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = FALSE)
print(t_test_result)
trimestres <- c(1, 2, 3, 4)
ventas_producto_A <- c(1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250,
1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280, 1280)
ventas_producto_B <- c(1280, 1280, 1270, 1270, 1270, 1270, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260,
1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260)
# Ajustar la longitud de ambos vectores
ventas_producto_A <- head(ventas_producto_A, length(ventas_producto_B))
# Realizar la prueba t de Student para comparación de medias
t_test_result <- t.test(ventas_producto_A, ventas_producto_B, paired = TRUE)
# Mostrar resultados
print(t_test_result)
